{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "deep-blue",
    "glyph" : "book"
  },
  "name" : "Random Scriptable API",
  "script" : "\/\/ This script shows a random Scriptable API in a widget. The script is meant to be used with a widget configured on the Home Screen.\n\/\/ You can run the script in the app to preview the widget or you can go to the Home Screen, add a new Scriptable widget and configure the widget to run this script.\n\/\/ You can also try creating a shortcut that runs this script. Running the shortcut will show widget.\nlet api = await randomAPI()\nlet widget = await createWidget(api)\nif (config.runsInWidget) {\n  \/\/ The script runs inside a widget, so we pass our instance of ListWidget to be shown inside the widget on the Home Screen.\n  Script.setWidget(widget)\n} else {\n  \/\/ The script runs inside the app, so we preview the widget.\n  widget.presentMedium()\n}\n\/\/ Calling Script.complete() signals to Scriptable that the script have finished running.\n\/\/ This can speed up the execution, in particular when running the script from Shortcuts or using Siri.\nScript.complete()\n\nasync function createWidget(api) {\n  let appIcon = await loadAppIcon()\n  let title = \"Random Scriptable API\"\n  let widget = new ListWidget()\n  \/\/ Add background gradient\n  let gradient = new LinearGradient()\n  gradient.locations = [0, 1]\n  gradient.colors = [\n    new Color(\"141414\"),\n    new Color(\"13233F\")\n  ]\n  widget.backgroundGradient = gradient\n  \/\/ Show app icon and title\n  let titleStack = widget.addStack()\n  let appIconElement = titleStack.addImage(appIcon)\n  appIconElement.imageSize = new Size(15, 15)\n  appIconElement.cornerRadius = 4\n  titleStack.addSpacer(4)\n  let titleElement = titleStack.addText(title)\n  titleElement.textColor = Color.white()\n  titleElement.textOpacity = 0.7\n  titleElement.font = Font.mediumSystemFont(13)\n  widget.addSpacer(12)\n  \/\/ Show API\n  let nameElement = widget.addText(api.name)\n  nameElement.textColor = Color.white()\n  nameElement.font = Font.boldSystemFont(18)\n  widget.addSpacer(2)\n  let descriptionElement = widget.addText(api.description)\n  descriptionElement.minimumScaleFactor = 0.5\n  descriptionElement.textColor = Color.white()\n  descriptionElement.font = Font.systemFont(18)\n  \/\/ UI presented in Siri ans Shortcuta is non-interactive, so we only show the footer when not running the script from Siri.\n  if (!config.runsWithSiri) {\n    widget.addSpacer(8)\n    \/\/ Add button to open documentation\n    let linkSymbol = SFSymbol.named(\"arrow.up.forward\")\n    let footerStack = widget.addStack()\n    let linkStack = footerStack.addStack()\n    linkStack.centerAlignContent()\n    linkStack.url = api.url\n    let linkElement = linkStack.addText(\"Read more\")\n    linkElement.font = Font.mediumSystemFont(13)\n    linkElement.textColor = Color.blue()\n    linkStack.addSpacer(3)\n    let linkSymbolElement = linkStack.addImage(linkSymbol.image)\n    linkSymbolElement.imageSize = new Size(11, 11)\n    linkSymbolElement.tintColor = Color.blue()\n    footerStack.addSpacer()\n    \/\/ Add link to documentation\n    let docsSymbol = SFSymbol.named(\"book\")\n    let docsElement = footerStack.addImage(docsSymbol.image)\n    docsElement.imageSize = new Size(20, 20)\n    docsElement.tintColor = Color.white()\n    docsElement.imageOpacity = 0.5\n    docsElement.url = \"https:\/\/docs.scriptable.app\"\n  }\n  return widget\n}\n\nasync function randomAPI() {\n  let docs = await loadDocs()\n  let apiNames = Object.keys(docs)\n  let num = Math.round(Math.random() * apiNames.length)\n  let apiName = apiNames[num]\n  let api = docs[apiName]\n  return {\n    name: apiName,\n    description: api[\"!doc\"],\n    url: api[\"!url\"]\n  }\n}\n\nasync function loadDocs() {\n  let url = \"https:\/\/docs.scriptable.app\/scriptable.json\"\n  let req = new Request(url)\n  return await req.loadJSON()\n}\n\nasync function loadAppIcon() {\n  let url = \"https:\/\/is5-ssl.mzstatic.com\/image\/thumb\/Purple124\/v4\/21\/1e\/13\/211e13de-2e74-4221-f7db-d6d2c53b4323\/AppIcon-1x_U007emarketing-0-7-0-85-220.png\/540x540sr.jpg\"\n  let req = new Request(url)\n  return req.loadImage()\n}",
  "share_sheet_inputs" : [

  ]
}